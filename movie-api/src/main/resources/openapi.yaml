openapi: 3.0.3
info:
  description:
    Movie Finder Service.
  version: 1.0.0
  title: Movie Finder API
  contact:
    name: 
      Movie Finder Co.

servers:
  - url: http://localhost:8080/movies/v1
    description: Local environment (mainly for development)


tags:
  - name: movie
    description: Provides Movie Finder endpoints

paths:
  /api/omdb:
    get:
      summary: Search for a Movie at omdb.
      tags: 
        - movie
      operationId: searchOmdb
      parameters:
        - in: query
          name: movieTitle
          schema:
            type: string
          required: true
          description: title of a movie
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/themoviedb:
    get:
      summary: Search for a Movie at themoviedb.
      tags: 
        - movie
      operationId: searchTheMoviedb
      parameters:
        - in: query
          name: movieTitle
          schema:
            type: string
          required: true
          description: title of a movie
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    MovieResponse:
      type: object
      required: [size, items]
      properties:
        size:
          example: 1
          type: integer
          format: int64
        movies:
          items:
            $ref: '#/components/schemas/Movie'
          type: array
    Movie:
      description: Type Movie
      type: object
      required: [Title, Year, Director]
      properties:
        Title:
          type: string
          example: Countdown
        Year:
          type: string
          example: "1967"
        Director:
          items:
            type: string
            example: "John Doe"
          type: array
    Error:
      description: Error object
      properties:
        message:
          description: Error message
          type: string
        timestamp:
          description: The timestamp the error has occured
          type: string
      required:
      - message
      - timestamp
      type: object
  responses:
    BadRequestError:
      description: Syntax error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Request cannot be processed because it is syntactically wrong
            timestamp: '2023-04-20T11:00:00Z'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Internal server error
            timestamp: '2023-04-20T11:00:00Z'